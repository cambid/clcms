You can define your own macros by creating a <name>.inc or <name>.macro
file. The .inc will be copied character for character to you page, and
should be used for instance to create standard headers. The .macro is more
intereting: here you can put in some python code. Whatever the code finally
puts into the variable called
*output*
will be placed into the page.

In the macro itself you have these variables at your disposal:

   * *output*
     This variable should contain your macro output as a string at the end
     of the code.

   * *arguments*
     Array containing any arguments that were passed to the macro (as
     strings)

   * *macro_name*
     Contains the name of the macro.

   * *options*
     The global variable containing .setup file options. You can read these out with
      * *get_option(options, "option_name")*
        for single options
      * *get_options(options, "option_name")*
        for plural options (ie. lists)
      * *get_option_dir(options, "option_name")*
        for options that contain files or directories. These will be made
        absolute (for the system you run clcms on, not for the website) if
        they do not start with a /

   * *page_name*
     Contains the title of the current page.

   * *root_dir*
     Contains the location of the directory on the filesystem where clcms
     was started.

   * *in_dir*
     Contains the location of the content input directory (i.e. the source
     directory of the current page).

   * *cur_dir_depth*
     The current page (directory) depth.

   * *macro_source*
     Contains the python source code of this macro

   * *input_line*
     Contains the input line from the .page file where this macro was read.

   * *macro_list*
     Contains all macros

   * *page_files*
     Contains a list of .page files for the current page.

   * *show_submenu*
     True if the submenu should be generated.

